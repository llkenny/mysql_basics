-- MySQL Script generated by MySQL Workbench
-- Wed Mar  3 16:04:30 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema max_oil
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema max_oil
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `max_oil` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `max_oil` ;

-- -----------------------------------------------------
-- Table `max_oil`.`organization_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`organization_details` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL COMMENT 'Название',
  `inn` VARCHAR(12) NOT NULL COMMENT 'ИНН',
  `address` VARCHAR(255) NULL COMMENT 'Адрес',
  `phone` BIGINT(12) NULL COMMENT 'Телефон',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  UNIQUE INDEX `inn_UNIQUE` (`inn` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Детали компании';


-- -----------------------------------------------------
-- Table `max_oil`.`manager`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`manager` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL COMMENT 'Имя сотрудника',
  `personnel_number` CHAR(10) NOT NULL COMMENT 'Табельный номер сотрудника',
  `phone` BIGINT(12) NULL COMMENT 'Телефон',
  `email` VARCHAR(245) NULL COMMENT 'Электронный адрес',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Закрепленный за организацией менеджер';


-- -----------------------------------------------------
-- Table `max_oil`.`organization`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`organization` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `discount_multiplier` DOUBLE NULL COMMENT 'Коэффициент скидок',
  `organization_details_id` INT UNSIGNED NOT NULL COMMENT 'Детали компании',
  `manager_id` INT UNSIGNED NULL COMMENT 'Закрепленный менеджер',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_organization_organization_details1_idx` (`organization_details_id` ASC) VISIBLE,
  INDEX `fk_organization_manager1_idx` (`manager_id` ASC) VISIBLE,
  CONSTRAINT `fk_organization_organization_details1`
    FOREIGN KEY (`organization_details_id`)
    REFERENCES `max_oil`.`organization_details` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_organization_manager1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `max_oil`.`manager` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Компании - клиенты';


-- -----------------------------------------------------
-- Table `max_oil`.`contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`contract` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `number` VARCHAR(15) NULL COMMENT 'Номер договора',
  `date` DATE NOT NULL COMMENT 'Дата заключение договора',
  `organization_id` INT UNSIGNED NOT NULL COMMENT 'Компания, с которой заключен договор',
  `expire_at` DATE NULL COMMENT 'Срок действия договора',
  `active` TINYINT NOT NULL DEFAULT 1 COMMENT 'Договор активен',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_contract_organization1_idx` (`organization_id` ASC) VISIBLE,
  CONSTRAINT `fk_contract_organization1`
    FOREIGN KEY (`organization_id`)
    REFERENCES `max_oil`.`organization` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Договор';


-- -----------------------------------------------------
-- Table `max_oil`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`employee` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL COMMENT 'Имя сотрудника',
  `contract_id` INT UNSIGNED NULL COMMENT 'Контракт, к которому прикреплен сотрудник. Для упрощения, каждый сотрудник может быть прикреплен только к одному контракту.',
  `organization_id` INT UNSIGNED NOT NULL COMMENT 'Компания сотрудника',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_user_contract1_idx` (`contract_id` ASC) VISIBLE,
  INDEX `fk_employee_organization1_idx` (`organization_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_contract1`
    FOREIGN KEY (`contract_id`)
    REFERENCES `max_oil`.`contract` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_organization1`
    FOREIGN KEY (`organization_id`)
    REFERENCES `max_oil`.`organization` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Сотрудник компании';


-- -----------------------------------------------------
-- Table `max_oil`.`virtual_card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`virtual_card` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `device_id` VARCHAR(255) NOT NULL COMMENT 'Идентификатор мобильного устройства',
  `type` ENUM("QR", "NFC") NOT NULL COMMENT 'Тип ВК: QR - оплата по QR коду, NFC - оплата по NFC мобильного устройства.',
  `created_at` DATETIME NOT NULL DEFAULT NOW() COMMENT 'Дата создания виртуальной карты',
  `expire_at` DATETIME NOT NULL COMMENT 'Срок действия',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Виртуальные карты. Позволяют оплачивать услуги и продукты с мобильного устройства без физической карты.';


-- -----------------------------------------------------
-- Table `max_oil`.`card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`card` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `number` BIGINT(16) NULL COMMENT 'Номер карты',
  `active` TINYINT NOT NULL DEFAULT 1 COMMENT 'Карта активна',
  `created_at` DATETIME NULL DEFAULT NOW() COMMENT 'Дата выпуска карты',
  `virtual_card_id` INT UNSIGNED NULL COMMENT 'Прикрепленная виртуальная карта',
  `employee_id` INT UNSIGNED NULL COMMENT 'Владелец карты',
  `contract_id` INT UNSIGNED NOT NULL COMMENT 'Договор, от которого выпущена карта',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_card_virtual_card1_idx` (`virtual_card_id` ASC) VISIBLE,
  INDEX `fk_card_employee1_idx` (`employee_id` ASC) VISIBLE,
  INDEX `fk_card_contract1_idx` (`contract_id` ASC) VISIBLE,
  CONSTRAINT `fk_card_virtual_card1`
    FOREIGN KEY (`virtual_card_id`)
    REFERENCES `max_oil`.`virtual_card` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_card_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `max_oil`.`employee` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_card_contract1`
    FOREIGN KEY (`contract_id`)
    REFERENCES `max_oil`.`contract` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Топливные карты';


-- -----------------------------------------------------
-- Table `max_oil`.`partner`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`partner` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `organization_details_id` INT UNSIGNED NOT NULL COMMENT 'Детали компании',
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  INDEX `fk_partner_organization_details1_idx` (`organization_details_id` ASC) VISIBLE,
  CONSTRAINT `fk_partner_organization_details1`
    FOREIGN KEY (`organization_details_id`)
    REFERENCES `max_oil`.`organization_details` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Компания - партнер';


-- -----------------------------------------------------
-- Table `max_oil`.`station`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`station` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(255) NOT NULL COMMENT 'Адрес',
  `latitude` DOUBLE NULL COMMENT 'Широта',
  `longitude` DOUBLE NULL COMMENT 'Долгота',
  `active` TINYINT NOT NULL DEFAULT 1 COMMENT 'Точка продажи активна',
  `partner_id` INT UNSIGNED NOT NULL COMMENT 'Партнер - владелец точки продажи',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_station_partner1_idx` (`partner_id` ASC) VISIBLE,
  CONSTRAINT `fk_station_partner1`
    FOREIGN KEY (`partner_id`)
    REFERENCES `max_oil`.`partner` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Точки продаж: станции обслуживания, мойки, АЗС.';


-- -----------------------------------------------------
-- Table `max_oil`.`service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`service` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL COMMENT 'Наименование',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Услуга';


-- -----------------------------------------------------
-- Table `max_oil`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`product` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL COMMENT 'Наименование',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Продукт';


-- -----------------------------------------------------
-- Table `max_oil`.`limit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`limit` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `count` INT NULL COMMENT 'Доступное количество услуги или продукта по лимиту',
  `count_used` DOUBLE NULL COMMENT 'Использовано по лимиту',
  `period` DOUBLE NULL COMMENT 'Периодичность лимита',
  `period_started_at` DATETIME NULL COMMENT 'Дата начала периода лимита',
  `station_id` INT UNSIGNED NULL COMMENT 'Точка обслуживания, которая включена в условия лимита. Для упрощения, несколько точек обслуживания по лимиту недоступно. Альтернатива - использовать partner_id.',
  `partner_id` INT UNSIGNED NULL COMMENT 'Партнер, который включен в условия лимита. ',
  `card_id` INT UNSIGNED NOT NULL COMMENT 'Карт, по которой установлен лимит',
  `service_id` INT UNSIGNED NULL COMMENT 'Услуга по лимиту',
  `product_id` INT UNSIGNED NULL COMMENT 'Продукт по лимиту',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_limit_station1_idx` (`station_id` ASC) VISIBLE,
  INDEX `fk_limit_partner1_idx` (`partner_id` ASC) VISIBLE,
  INDEX `fk_limit_card1_idx` (`card_id` ASC) VISIBLE,
  INDEX `fk_limit_service_type1_idx` (`service_id` ASC) VISIBLE,
  INDEX `fk_limit_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_limit_station1`
    FOREIGN KEY (`station_id`)
    REFERENCES `max_oil`.`station` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_limit_partner1`
    FOREIGN KEY (`partner_id`)
    REFERENCES `max_oil`.`partner` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_limit_card1`
    FOREIGN KEY (`card_id`)
    REFERENCES `max_oil`.`card` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_limit_service_type1`
    FOREIGN KEY (`service_id`)
    REFERENCES `max_oil`.`service` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_limit_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `max_oil`.`product` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Лимиты на услуги и продукты. Лимит может быть: на услугу или на продукт; разовый или периодичный.';


-- -----------------------------------------------------
-- Table `max_oil`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL COMMENT 'Имя пользователя',
  `password` CHAR(64) NULL COMMENT 'Хэш пароля SHA256. Если значение NULL - учетная запись неактивна.',
  `employee_id` INT UNSIGNED NOT NULL COMMENT 'Сотрудник - владелец учетной записи',
  `role` ENUM("admin", "readonly") NOT NULL DEFAULT 'readonly' COMMENT 'Роль (Права доступа к лимитам, блокировке карты и т.д.)',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_user_employee1_idx` (`employee_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_employee1`
    FOREIGN KEY (`employee_id`)
    REFERENCES `max_oil`.`employee` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Пользователь клиентской системы';


-- -----------------------------------------------------
-- Table `max_oil`.`station_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`station_service` (
  `station_id` INT UNSIGNED NOT NULL,
  `service_id` INT UNSIGNED NOT NULL,
  `price` DOUBLE NULL COMMENT 'Цена услуги на станции',
  PRIMARY KEY (`station_id`, `service_id`),
  INDEX `fk_station_service_station1_idx` (`station_id` ASC) VISIBLE,
  INDEX `fk_station_service_service1_idx` (`service_id` ASC) VISIBLE,
  CONSTRAINT `fk_station_service_station1`
    FOREIGN KEY (`station_id`)
    REFERENCES `max_oil`.`station` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_station_service_service1`
    FOREIGN KEY (`service_id`)
    REFERENCES `max_oil`.`service` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Доступные услуги на станциях';


-- -----------------------------------------------------
-- Table `max_oil`.`station_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`station_product` (
  `product_id` INT UNSIGNED NOT NULL,
  `station_id` INT UNSIGNED NOT NULL,
  `price` DOUBLE NULL COMMENT 'Цена продукта на станции',
  PRIMARY KEY (`product_id`, `station_id`),
  INDEX `fk_station_product_station1_idx` (`station_id` ASC) VISIBLE,
  INDEX `fk_station_product_product1_idx` (`product_id` ASC) VISIBLE,
  CONSTRAINT `fk_station_product_station1`
    FOREIGN KEY (`station_id`)
    REFERENCES `max_oil`.`station` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_station_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `max_oil`.`product` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Доступные продукты на станциях';


-- -----------------------------------------------------
-- Table `max_oil`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `max_oil`.`transaction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL COMMENT 'Дата совершения операции',
  `price` DOUBLE NULL COMMENT 'Цена услуги или продукта на момент совершения операции',
  `sum` DOUBLE NULL COMMENT 'Общая сумма операции',
  `card_id` INT UNSIGNED NOT NULL COMMENT 'Карта, по которой совершена операция',
  `service_id` INT UNSIGNED NULL COMMENT 'Услуга',
  `product_id` INT UNSIGNED NULL COMMENT 'Продукт',
  `station_id` INT UNSIGNED NOT NULL COMMENT 'Точка обслуживания, на которой была совершена операция',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) VISIBLE,
  INDEX `fk_transaction_card1_idx` (`card_id` ASC) VISIBLE,
  INDEX `fk_transaction_service1_idx` (`service_id` ASC) VISIBLE,
  INDEX `fk_transaction_product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_transaction_station1_idx` (`station_id` ASC) VISIBLE,
  CONSTRAINT `fk_transaction_card1`
    FOREIGN KEY (`card_id`)
    REFERENCES `max_oil`.`card` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_transaction_service1`
    FOREIGN KEY (`service_id`)
    REFERENCES `max_oil`.`service` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_transaction_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `max_oil`.`product` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_transaction_station1`
    FOREIGN KEY (`station_id`)
    REFERENCES `max_oil`.`station` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Операция по продуктам и услугам';

USE `max_oil`;

DELIMITER $$
USE `max_oil`$$
CREATE DEFINER = CURRENT_USER TRIGGER `max_oil`.`employee_BEFORE_INSERT` BEFORE INSERT ON `employee` FOR EACH ROW
BEGIN
	DECLARE org_id INT;
    SELECT id INTO org_id FROM contract WHERE id = NEW.contract_id AND organization_id = NEW.organization_id LIMIT 1;
	IF ISNULL(org_id) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid contract for the organization';
    END IF;
END$$

USE `max_oil`$$
CREATE DEFINER = CURRENT_USER TRIGGER `max_oil`.`employee_BEFORE_UPDATE` BEFORE UPDATE ON `employee` FOR EACH ROW
BEGIN
	DECLARE org_id INT;
    SELECT id INTO org_id FROM contract WHERE id = NEW.contract_id AND organization_id = NEW.organization_id LIMIT 1;
	IF ISNULL(org_id) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid contract for the organization';
    END IF;
END$$

USE `max_oil`$$
CREATE DEFINER = CURRENT_USER TRIGGER `max_oil`.`employee_AFTER_INSERT` AFTER INSERT ON `employee` FOR EACH ROW
BEGIN
	INSERT INTO `user` (`username`, `employee_id`) VALUES (CONCAT('auto_', new.`id`), new.`id`);
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
